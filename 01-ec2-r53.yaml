- name: Create ec2 instance and Route53 records
  hosts: local
  connection: local
  become: yes
  vars:
    AMI_ID: "ami-09c813fb71547fc4f"
    SG_ID: "sg-0c61f8c910f73455b" # replace with your SG ID
    ZONE_ID: "Z07169343EH3XUR27U2Q2" # replace with your ID
    DOMAIN_NAME: "mgunti.space"
    ansible_python_interpreter: /usr/bin/python3
  vars_prompt:
  - name: instance
    prompt: Enter instance name which you want to create?
    private: false
  
  tasks:
  - name: create ec2 instance
    amazon.aws.ec2_instance:
      name: "{{ instance }}"
      instance_type: t2.micro
      security_group: "{{ SG_ID }}"
      image_id: "{{ AMI_ID }}"
      tags:
        Name: "{{ instance }}"
#   loop: "{{ instances }}"
    register: ec2_output 

  - name: print the ec2_output
    ansible.builtin.debug:
      msg: "{{ ec2_output }}"

  # - name: print public_ip
  #   ansible.builtin.debug: 
  #     msg: "{{ item.instances[0].public_ip_address }}"
  #   loop: "{{ ec2_output.results }}"

  # - name: print private_ip
  #   ansible.builtin.debug: 
  #     msg: "{{ item.instances[0].private_ip_address }}"
  #   loop: "{{ ec2_output.results }}"

  # - name: create route53 record
  #   amazon.aws.route53:
  #     state: present
  #     zone: "{{ DOMAIN_NAME }}"
  #     record: "{{ item.item }}.{{ DOMAIN_NAME }}" # mongodb.daws86s.fun
  #     type: A
  #     ttl: 1
  #     value: "{{ item.instances[0]. private_ip_address }}"
  #     overwrite: true
  #   loop: "{{ ec2_output.results }}"

  # # we are creating one record with public only for frontend
  # - name: create route53 record for frontend
  #   amazon.aws.route53:
  #     state: present
  #     zone: "{{ domain_name }}"
  #     record: "{{ domain_name }}" # daws86s.fun
  #     type: A
  #     ttl: 1
  #     value: "{{ item.instances[0].public_ip_address }}"
  #     overwrite: true
  #   when: item.item == "frontend"
  #   loop: "{{ ec2_output.results }}"
